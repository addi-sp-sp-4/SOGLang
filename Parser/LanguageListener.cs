//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface ILanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparator([NotNull] LanguageParser.ComparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparator([NotNull] LanguageParser.ComparatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.single"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingle([NotNull] LanguageParser.SingleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.single"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingle([NotNull] LanguageParser.SingleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.nullval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullval([NotNull] LanguageParser.NullvalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.nullval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullval([NotNull] LanguageParser.NullvalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.vector3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVector3([NotNull] LanguageParser.Vector3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.vector3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVector3([NotNull] LanguageParser.Vector3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] LanguageParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] LanguageParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.datatype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatatype([NotNull] LanguageParser.DatatypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.datatype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatatype([NotNull] LanguageParser.DatatypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.numbertype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumbertype([NotNull] LanguageParser.NumbertypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.numbertype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumbertype([NotNull] LanguageParser.NumbertypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.alltype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlltype([NotNull] LanguageParser.AlltypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.alltype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlltype([NotNull] LanguageParser.AlltypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.keyvaluepair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyvaluepair([NotNull] LanguageParser.KeyvaluepairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.keyvaluepair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyvaluepair([NotNull] LanguageParser.KeyvaluepairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.dict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDict([NotNull] LanguageParser.DictContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.dict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDict([NotNull] LanguageParser.DictContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] LanguageParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] LanguageParser.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLparen([NotNull] LanguageParser.LparenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLparen([NotNull] LanguageParser.LparenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRparen([NotNull] LanguageParser.RparenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRparen([NotNull] LanguageParser.RparenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLbracket([NotNull] LanguageParser.LbracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLbracket([NotNull] LanguageParser.LbracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRbracket([NotNull] LanguageParser.RbracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRbracket([NotNull] LanguageParser.RbracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLcurlybracket([NotNull] LanguageParser.LcurlybracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLcurlybracket([NotNull] LanguageParser.LcurlybracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRcurlybracket([NotNull] LanguageParser.RcurlybracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRcurlybracket([NotNull] LanguageParser.RcurlybracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.fname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFname([NotNull] LanguageParser.FnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.fname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFname([NotNull] LanguageParser.FnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] LanguageParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] LanguageParser.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] LanguageParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] LanguageParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] LanguageParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] LanguageParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] LanguageParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] LanguageParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMath([NotNull] LanguageParser.MathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMath([NotNull] LanguageParser.MathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtension([NotNull] LanguageParser.ExtensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtension([NotNull] LanguageParser.ExtensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.extender"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtender([NotNull] LanguageParser.ExtenderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.extender"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtender([NotNull] LanguageParser.ExtenderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] LanguageParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] LanguageParser.CommandContext context);
}
