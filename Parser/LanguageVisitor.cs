//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface ILanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparator([NotNull] LanguageParser.ComparatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.single"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingle([NotNull] LanguageParser.SingleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.nullval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullval([NotNull] LanguageParser.NullvalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.vector3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVector3([NotNull] LanguageParser.Vector3Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] LanguageParser.BoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.datatype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDatatype([NotNull] LanguageParser.DatatypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.numbertype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumbertype([NotNull] LanguageParser.NumbertypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.alltype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlltype([NotNull] LanguageParser.AlltypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.keyvaluepair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyvaluepair([NotNull] LanguageParser.KeyvaluepairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.dict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDict([NotNull] LanguageParser.DictContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitList([NotNull] LanguageParser.ListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.lparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLparen([NotNull] LanguageParser.LparenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.rparen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRparen([NotNull] LanguageParser.RparenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.lbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLbracket([NotNull] LanguageParser.LbracketContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.rbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRbracket([NotNull] LanguageParser.RbracketContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.lcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcurlybracket([NotNull] LanguageParser.LcurlybracketContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.rcurlybracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRcurlybracket([NotNull] LanguageParser.RcurlybracketContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.fname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFname([NotNull] LanguageParser.FnameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] LanguageParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] LanguageParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] LanguageParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator([NotNull] LanguageParser.OperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMath([NotNull] LanguageParser.MathContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.extension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtension([NotNull] LanguageParser.ExtensionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.extender"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtender([NotNull] LanguageParser.ExtenderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] LanguageParser.CommandContext context);
}
