//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILanguageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class LanguageBaseListener : ILanguageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.comparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparator([NotNull] LanguageParser.ComparatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.comparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparator([NotNull] LanguageParser.ComparatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.single"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingle([NotNull] LanguageParser.SingleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.single"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingle([NotNull] LanguageParser.SingleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.nullval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullval([NotNull] LanguageParser.NullvalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.nullval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullval([NotNull] LanguageParser.NullvalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.vector3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVector3([NotNull] LanguageParser.Vector3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.vector3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVector3([NotNull] LanguageParser.Vector3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] LanguageParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] LanguageParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] LanguageParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] LanguageParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatatype([NotNull] LanguageParser.DatatypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatatype([NotNull] LanguageParser.DatatypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.numbertype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumbertype([NotNull] LanguageParser.NumbertypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.numbertype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumbertype([NotNull] LanguageParser.NumbertypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.alltype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlltype([NotNull] LanguageParser.AlltypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.alltype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlltype([NotNull] LanguageParser.AlltypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.keyvaluepair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyvaluepair([NotNull] LanguageParser.KeyvaluepairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.keyvaluepair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyvaluepair([NotNull] LanguageParser.KeyvaluepairContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.dict"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDict([NotNull] LanguageParser.DictContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.dict"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDict([NotNull] LanguageParser.DictContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList([NotNull] LanguageParser.ListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList([NotNull] LanguageParser.ListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lparen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLparen([NotNull] LanguageParser.LparenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lparen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLparen([NotNull] LanguageParser.LparenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rparen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRparen([NotNull] LanguageParser.RparenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rparen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRparen([NotNull] LanguageParser.RparenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lbracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLbracket([NotNull] LanguageParser.LbracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lbracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLbracket([NotNull] LanguageParser.LbracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rbracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRbracket([NotNull] LanguageParser.RbracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rbracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRbracket([NotNull] LanguageParser.RbracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.lcurlybracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLcurlybracket([NotNull] LanguageParser.LcurlybracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.lcurlybracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLcurlybracket([NotNull] LanguageParser.LcurlybracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.rcurlybracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRcurlybracket([NotNull] LanguageParser.RcurlybracketContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.rcurlybracket"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRcurlybracket([NotNull] LanguageParser.RcurlybracketContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.fname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFname([NotNull] LanguageParser.FnameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.fname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFname([NotNull] LanguageParser.FnameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison([NotNull] LanguageParser.ComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison([NotNull] LanguageParser.ComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] LanguageParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] LanguageParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] LanguageParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] LanguageParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] LanguageParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] LanguageParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMath([NotNull] LanguageParser.MathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMath([NotNull] LanguageParser.MathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.extension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtension([NotNull] LanguageParser.ExtensionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.extension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtension([NotNull] LanguageParser.ExtensionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.extender"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtender([NotNull] LanguageParser.ExtenderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.extender"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtender([NotNull] LanguageParser.ExtenderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand([NotNull] LanguageParser.CommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand([NotNull] LanguageParser.CommandContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
